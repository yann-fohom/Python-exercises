from pprint import pprint # pprint(pretty printing) is used to display nicely dictionnaries.

# The must repeated letter in this string
sentence = "This is a common interview question"
# Step 1

# How many times each chr is repeated. We'll use a dictionary here cuz it's a collection of key value pair
# So here we can use the chrs as the keys and the repetitions as the value.
count_chr = {}

for chr in sentence:
    # First we need to check if we have this chr in our dictionary, if we don't we must set his frequency to 1
    if chr in count_chr:
        count_chr[chr] += 1 # check if we have this chr in our dictionary
    else:
        count_chr[chr] = 1 #  if we don't we must set his frequency to 1
# pprint (count_chr, width=1) # width determines the number of chrs on each line.
    
    
# Step 2
# Sort the dictionary by its frequency of chrs. But Dict and set are unorded collections.
# We can only sort 'list'.

# Let's call the sorted func
char_freq_sorted = sorted(
    count_chr.items(), 
    key=lambda kv:kv[1], 
    reverse = True) # this method return all the key value pairs as tuples.
# Let's print line 25
print(char_freq_sorted[0])
